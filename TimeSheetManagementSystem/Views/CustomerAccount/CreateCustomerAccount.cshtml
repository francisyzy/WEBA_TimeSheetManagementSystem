<div class="container">
    <div class="col-md-offset-2 col-md-8">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <div class="panel-title">Create Customer Account</div>
            </div>
            <div class="panel-body">
                <form id="dataForm" role="form" class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="accountNameInput">Account Name</label>
                        <div class="col-md-4">
                            <input type="text" id="accountNameInput" name="accountNameInput" class="form-control input-group-sm"
                                   maxlength="30" placeholder="Account Name" value="" required />
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3" for="commentsInput">Comments</label>
                        <div class="col-md-4">
                            <textarea rows="4" cols="50" type="text" id="commentsInput" name="commentsInput" class="form-control input-group-sm"
                                      placeholder="Comments" value=""></textarea>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3" for="isVisible">Visibility</label>
                        <div class="col-md-4">
                            <input type="checkbox" id="isVisible" class="form-control input-group-sm" name="isVisible" checked />
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3" for="ratePerHourInput">Rate Per Hour</label>
                        <div class="col-md-4">
                            <input type="text" id="ratePerHourInput" name="ratePerHourInput" class="form-control input-group-sm"
                                   maxlength="30" placeholder="Rate Per Hour" value="" required />
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3" for="startDateInput">Effective Start Date</label>
                        <div class="col-md-4">
                            <input type="date" id="startDateInput" name="startDateInput" class="form-control input-group-sm"
                                   maxlength="30" placeholder="" value="" required />
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3" for="endDateInput">Effective End Date</label>
                        <div class="col-md-4">
                            <input type="date" id="endDateInput" name="endDateInput" class="form-control input-group-sm"
                                   maxlength="30" placeholder="" value="" />
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3"></label>
                        <div class="col-md-9">
                            <div class="pull-right">
                                <input type="button" class="btn btn-primary" value="Save" id="saveButton" />
                                <a class="btn btn-default" asp-action="ManageCustomerAccounts" asp-controler="CustomerAccount">Cancel</a>
                            </div>
                        </div>
                    </div>
                </form>
            </div><!-- end of div element which has the class="panel-body" -->
        </div><!-- end of the div element which has the class="panel" -->
    </div><!-- end of the div element which has class="col-md-offset-2 col-md-8" -->
</div><!-- end of div element which has the class="container" -->



<script>
    $("[name='isVisible']").bootstrapSwitch();
    $("#dataForm").validate({
        rules: {
            accountNameInput: {
                required: true
            },
            startDateInput: {
                required: true,
                date: true
            },
            endDateInput: {
                date: true
            },
            ratePerHourInput: {
                required: true,
                number: true
            }
        }
    });
    function WebFormData(inAccountName, inComment, inIsVisible, inCreatedById, inUpdatedById/*, inRatePerHour, inStartDate, inEndDate*/) {
        this.AccountName = inAccountName;
        this.comments = inComment;
        this.IsVisible = inIsVisible;
        this.CreatedById = inCreatedById;
        this.UpdatedById = inUpdatedById;
        //this.RatePerHour = inRatePerHour;
        //this.EffectiveStartDate = inStartDate;
        //this.EffectiveEndDate = inEndDate;
    }//need to get user id that sent this information?? https://stackoverflow.com/questions/4613992/using-page-user-identity-name-in-mvc3
    $('#saveButton').on('click', function () {
        var collectedAccountName = $('#accountNameInput').val();
        var collectedComments = $('#commentsInput').val();
        var collectedIsVisible = $('#isVisible').prop('checked'); //https://stackoverflow.com/questions/4813219/testing-if-a-checkbox-is-checked-with-jquery
        var collectedCreatedById = @this.User.Identity.Name;
        var collectedUpdatedById = @this.User.Identity.Name;
        var collectedRatePerHour = $('#ratePerHourInput').val();
        var collectedStartDate = $('#startDateInput').val();
        var collectedEndDate = $('#endDateInput').val();
        if ($("#dataForm").valid() == false) {
            console.log("invaild");
        } else if (collectedAccountName.length == 0) { //https://stackoverflow.com/questions/23668065/how-to-do-simple-client-side-form-validation-using-javascript-jquery#23668074
            alert("Please input a account name");
        } else if (jQuery.trim(collectedAccountName).length == 0) {
            alert("Please input a account name");
        } else if (collectedAccountName.match(/[^A-Za-z0-9 &]/g)) {
            alert("illegal character detected, please remove symbols");
        } else if (collectedStartDate.length == 0) { //https://stackoverflow.com/questions/23668065/how-to-do-simple-client-side-form-validation-using-javascript-jquery#23668074
            alert("Please select an effective start date");
        } else if (jQuery.trim(collectedStartDate).length == 0) {
            alert("Please select an effective start date");
        } else if (collectedRatePerHour.length == 0) { //https://stackoverflow.com/questions/23668065/how-to-do-simple-client-side-form-validation-using-javascript-jquery#23668074
            alert("Please input rate per hour");
        } else if (jQuery.trim(collectedRatePerHour).length == 0) {
            alert("Please input rate per hour");
        } else if (collectedRatePerHour.match(/[^0-9 .]/g)) {
            alert("illegal character detected, please only insert numbers");
        } else if (collectedEndDate != "") {
            console.log("collectedEffectiveStartDate" + collectedStartDate);
            console.log("collectedEffectiveEndDate" + collectedEndDate);
            if (collectedStartDate > collectedEndDate) {
                alert("Please select a end date that is later than the start date");
            }
        }  else {
            var webFormData = new WebFormData(collectedAccountName, collectedComments, collectedIsVisible, collectedCreatedById, collectedUpdatedById/*, collectedRatePerHour, collectedStartDate, collectedEndDate*/);
            var webFormDataInString = JSON.stringify(webFormData);

            console.log(webFormDataInString);

            $addCustomerAccountHandler = jQuery.ajax({
                type: 'POST',
                url: '/API/CustomerAccount',
                dataType: 'json',
                contentType: 'application/json;',
                data: "'" + webFormDataInString + "'"
            })
            $addCustomerAccountHandler.done(function (data, textStatus, jqXHR) {
                if (data.status == "success") {
                    console.log("Customer account Id: " + data.customerAccountId);
                    var customerAccountId = data.customerAccountId;
                    new Noty({
                        text: data.message,
                        type: 'success',
                        dismissQueue: true,
                        layout: 'center'
                    }).show();
                    function DataForAccountRate(inAccountId, inRatePerHour, inStartDate, inEndDate) {
                        this.CustomerAccountId = inAccountId
                        this.RatePerHour = inRatePerHour;
                        this.EffectiveStartDate = inStartDate;
                        this.EffectiveEndDate = inEndDate;
                    }
                    var dataForAccountRate = new DataForAccountRate(customerAccountId, collectedRatePerHour, collectedStartDate, collectedEndDate);
                    var dataForAccountRateInString = JSON.stringify(dataForAccountRate);
                    console.log(dataForAccountRateInString);
                    $addAccountRateHandler = jQuery.ajax({
                        type: 'POST',
                        url: '/API/AccountRate',
                        dataType: 'json',
                        contentType: 'application/json;',
                        data: "'" + dataForAccountRateInString + "'"
                    })
                    $addAccountRateHandler.done(function (data, textStatus, jqXHR) {
                        if (data.status == "success") {
                            new Noty({
                                text: data.message, type: 'success',
                                dismissQueue: true,
                                layout: 'center'
                            }).show();
                        } else {
                            new Noty({
                                text: data.message, type: 'error',
                                dismissQueue: true,
                                layout: 'center'
                            }).show();

                        }
                    });
                    $addAccountRateHandler.fail(function (data, textStatus, jqXHR) {
                        console.log('executed when runtime error on server side occurred for add account rate');
                        new Noty({
                            text: 'Fail to create account rate, deleting customer account',//data.responseJSON.message,
                            type: 'error',
                            dismissQueue: true,
                            layout: 'center'
                        }).show();

                        //delete customer account
                        console.log("start deleting customeraccount");
                        $deleteCustomerAccountHandler = jQuery.ajax({
                            type: 'Delete',
                            url: '/API/CustomerAccount/' + customerAccountId,
                        })
                        $deleteCustomerAccountHandler.done(function (data, textStatus, jqXHR) {
                            if (data.status == "success") {
                                new Noty({
                                    text: data.message, type: 'success',
                                    dismissQueue: true,
                                    layout: 'center'
                                }).show();
                            } else {
                                new Noty({
                                    text: data.message, type: 'error',
                                    template: '<div class="noty_message"><span class="noty_text"></span>',
                                    layout: 'center'
                                }).show();
                            }
                        });
                        $deleteCustomerAccountHandler.fail(function (data, textStatus, jqXHR) {
                            console.log('executed when runtime error on server side occurred FAIL TO DELETE');
                            console.log(data);
                            new Noty({
                                text: data.responseJSON.message,
                                type: 'error',
                                template: '<div class="noty_message"><span class="noty_text"></span>',
                                layout: 'center'
                            }).show();
                        });
                    });

                } else {
                    new Noty({
                        text: data.message,
                        type: 'error',
                        dismissQueue: true,
                        layout: 'center'
                    }).show();
                }
            });
            $addCustomerAccountHandler.fail(function (data, textStatus, jqXHR) {
                console.log('executed when runtime error on server side occurred');
                new Noty({
                    text: data.responseJSON.message,
                    type: 'error',
                    dismissQueue: true,
                    layout: 'center'
                }).show();
            });
        }//end of else

    });//end of save button

</script>