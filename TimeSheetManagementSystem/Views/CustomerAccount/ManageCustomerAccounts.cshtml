<div class="panel  panel-primary">
    <div class="panel-heading">
        Manage Customer Accounts
        <div class="btn-group pull-right">
            <a asp-action="CreateCustomerAccount" asp-controller="CustomerAccount" class="btn btn-default btn-group-lg ">Add Customer Account</a>
        </div>
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-md-12" style="overflow: auto">
                <table @*style="table-layout:fixed" *@ class="table table-hover">
                    <thead>
                        <tr>
                            <th>Actions</th>
                            <th>Account Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
                            <th># of Rates Data</th>
                            <th># of Instructors</th>
                            <th>Comments&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
                            <th>Updated By</th>
                            <th>Updated At</th>
                            <th>&nbsp;</th>
                            <th>&nbsp;</th>
                            <th>&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody id="customerAccountTableBody"></tbody>
                </table>

            </div>
        </div>

    </div><!-- end of Panel Body -->
</div><!-- end of Main Panel -->

<script>

    $(document).ready(function () {
        loadCustomerAccountData();
    })
    function loadCustomerAccountData() {
        jQuery.ajax({
            url: '/Api/CustomerAccount',
            method: 'GET',
            dataType: 'json',
            cache: false,
        }).done(function (data, textStatus, jqXHR) {
            //This done method will
            //The (data) input parameter automatically captures the response from the
            //GET() method

            //I usually use the following code
            //to inspect the returned result captured by the data input parameter
            //from the web server.
            console.log(data);

            //After inspecting the data object with the console.log
            //I have clear picture of the structure and used
            //the following variable to represent the response.d
            var customerAccountList = data;
            var accountName = '';
            var comments = '';
            var updatedBy = '';
            var updatedAt = '';
            var $tableElement = null;
            var $cellElement = null;
            var $rowElement = null;
            //-------- Find the table element -----------
            //I am using the $tableElement variable
            //to represent the found HTML element which has a matching id of userTableBody
            $tableBodyElement = $('#customerAccountTableBody');

            //I want to build rows and cells (using tr and td HTML elements) so that
            //I can display user id, full name, email, user name (staff id) and role information
            //within the HTML table element,userTableBody. Recall that, I have already asked the
            //$tableBodyElement variable to represent (reference) the table element.
            //-------- Begin creating <tr> and <td> HTML element ------
            for (index = 0; index < customerAccountList.length; index++) {
                //Set this user variable to reference a user object
                //within the customerAccountList Array.
                customerAccount = customerAccountList[index];
                //Copy out the customerAccount information
                customerAccountId = customerAccount.customerAccountId;
                accountName = customerAccount.accountName;
                //rateCount = $.when(getRatesCount(customerAccount.customerAccountId)); //stupid method coming right up since i cannot figure out other methods
                rateCount = customerAccount.rateCount;
                instructorCount = customerAccount.instructorCount;
                comments = customerAccount.comments;
                updatedBy = customerAccount.updatedByName;
                updatedAt = new Date(Date.parse(customerAccount.updatedAt));
                //https://stackoverflow.com/questions/17950075/convert-c-sharp-datetime-to-javascript-date


                //Create new HTML <tr> element.
                //At the same time let the $rowElement variable to represent it.
                $rowElement = $('<tr></tr>');
                //Create the 1st cell element which display Actions ()
                //$dropdown
                //https://stackoverflow.com/questions/13358138/how-can-you-add-data-toggle-dropdown-to-an-anchor
                //https://www.w3schools.com/jquery/jquery_ref_html.asp
                //https://www.w3schools.com/bootstrap/tryit.asp?filename=trybs_dropdown-menu&stacked=h
                $div = $('<div></div>').addClass('dropdown');
                $dropdown = $('<a></a>').addClass('btn btn-default dropdown-toggle').attr("data-toggle", "dropdown");
                $span = $('<span></span>').addClass('caret');
                $dropdown.append($span);
                $ul = $('<ul></ul>').addClass('dropdown-menu');
                $li = $('<li></li>');
                $hyperLinkElement = $('<a>Update General Info</a>').attr('href', '/CustomerAccount/UpdateCustomerAccount/' + customerAccountId);
                $li.append($hyperLinkElement);
                $ul.append($li);
                $hyperLinkElement = $('<a>Manage rate/hour</a>').attr('href', '/CustomerAccount/ManageAccountRate/' + customerAccountId);
                $li.append($hyperLinkElement);
                $ul.append($li);
                $hyperLinkElement = $('<a>Add account details</a>').attr('href', '/AccountDetail/CreateOneAccountDetailForCustomerAccount/' + customerAccountId);
                $li.append($hyperLinkElement);
                $ul.append($li);
                $hyperLinkElement = $('<a>Manage account details</a>').attr('href', '/AccountDetail/ManageAccountDetailsForOneCustomerAccount/' + customerAccountId);
                $li.append($hyperLinkElement);
                $ul.append($li);
                $div.append($dropdown);
                $div.append($ul);
                $cellElement = $('<td></td>');
                $cellElement.append($div);
                $rowElement.append($cellElement);
                //Create the 2nd cell element which display Account Name ()
                $cellElement = $('<td></td>', { text: accountName }).attr("style", "word-wrap: break-word;min-width: 100px;max-width: 100px;");
                $rowElement.append($cellElement);
                //Create the 3rd cell element which display # of Rates Data
                $cellElement = $('<td></td>', { text: rateCount });
                $rowElement.append($cellElement);
                //Create the 4th cell element which display # of Instructors
                $cellElement = $('<td></td>', { text: instructorCount });
                $rowElement.append($cellElement);
                //Create the 5th cell element which display Comments
                $cellElement = $('<td></td>', { text: comments }).attr("style", "word-wrap: break-word;min-width: 100px;max-width: 100px;");
                $rowElement.append($cellElement);
                //Create the 6th cell element which display Updated By
                $cellElement = $('<td></td>', { text: updatedBy });
                $rowElement.append($cellElement);
                //Create the 7th cell element which display Updated At
                $cellElement = $('<td></td>', { text: formatDate(updatedAt) });
                $rowElement.append($cellElement);

                //Also, create an additional hyperlink element which will
                //look like a button due to the Bootstrap class.
                //This <a> hyperlink element also need to have 1 important feature:
                //When it is clicked, it will tell the web browser to request for the UserManager controller's
                //Update action.
                //and at the same time pass a QueryString data value of the respective user id.

                //---------------- Using jQuery() to create the hyperlink element using the <a></a> --------
                $hyperLinkElement = $('<a>Update General Info</a>').attr('href', '/CustomerAccount/UpdateCustomerAccount/' + customerAccountId);
                $hyperLinkElement.addClass('btn btn-primary');
                //The $hyperLinkElement eventually represents (references) a HTML element which is:
                //<a href="UserManager/Update/<user id>" class="btn btn-primary" >Update User</a>
                //-----------------Using jQuery() to creating the 3rd cell for the row----------------------
                $cellElement = $('<td></td>');
                //-----------------Add the previous created hyperlink element, $hyperLinkElement
                //                 into the newly created 8th cell.
                //As a result, $cellElement references an element defined by:
                //<td><<a href="UpdateUser/<user id>" class="btn btn-primary" >Update User</a></td>
                $cellElement.append($hyperLinkElement);
                //---------------Add the 8th cell into the row represented by the $rowElement
                $rowElement.append($cellElement);


                //---------------- Using jQuery() to create the hyperlink element using the <a></a> --------
                $hyperLinkElement = $('<a>Manage rate/hour</a>').attr('href', '/CustomerAccount/ManageAccountRate/' + customerAccountId);
                $hyperLinkElement.addClass('btn btn-primary');
                //The $hyperLinkElement eventually represents (references) a HTML element which is:
                //<a href="UserManager/Update/<user id>" class="btn btn-primary" >Update User</a>
                //-----------------Using jQuery() to creating the 3rd cell for the row----------------------
                $cellElement = $('<td></td>');
                //-----------------Add the previous created hyperlink element, $hyperLinkElement
                //                 into the newly created 9th cell.
                //As a result, $cellElement references an element defined by:
                //<td><<a href="UpdateUser/<user id>" class="btn btn-primary" >Update User</a></td>
                $cellElement.append($hyperLinkElement);
                //---------------Add the 9th cell into the row represented by the $rowElement
                $rowElement.append($cellElement);


                //---------------- Using jQuery() to create the hyperlink element using the <a></a> --------
                $hyperLinkElement = $('<a>Add account details</a>').attr('href', '/AccountDetail/CreateOneAccountDetailForCustomerAccount/' + customerAccountId);
                $hyperLinkElement.addClass('btn btn-primary');
                //The $hyperLinkElement eventually represents (references) a HTML element which is:
                //<a href="UserManager/Update/<user id>" class="btn btn-primary" >Update User</a>
                //-----------------Using jQuery() to creating the 3rd cell for the row----------------------
                $cellElement = $('<td></td>');
                //-----------------Add the previous created hyperlink element, $hyperLinkElement
                //                 into the newly created 10th cell.
                //As a result, $cellElement references an element defined by:
                //<td><<a href="UpdateUser/<user id>" class="btn btn-primary" >Update User</a></td>
                $cellElement.append($hyperLinkElement);
                //---------------Add the 10th cell into the row represented by the $rowElement
                $rowElement.append($cellElement);

                //---------------- Using jQuery() to create the hyperlink element using the <a></a> --------
                $hyperLinkElement = $('<a>Manage account details</a>').attr('href', '/AccountDetail/ManageAccountDetailsForOneCustomerAccount/' + customerAccountId);
                $hyperLinkElement.addClass('btn btn-primary');
                //The $hyperLinkElement eventually represents (references) a HTML element which is:
                //<a href="UserManager/Update/<user id>" class="btn btn-primary" >Update User</a>
                //-----------------Using jQuery() to creating the 3rd cell for the row----------------------
                $cellElement = $('<td></td>');
                //-----------------Add the previous created hyperlink element, $hyperLinkElement
                //                 into the newly created 10th cell.
                //As a result, $cellElement references an element defined by:
                //<td><<a href="UpdateUser/<user id>" class="btn btn-primary" >Update User</a></td>
                $cellElement.append($hyperLinkElement);
                //---------------Add the 10th cell into the row represented by the $rowElement
                $rowElement.append($cellElement);


                //Insert the $rowElement into the table element represented by $tableElement.
                $tableBodyElement.append($rowElement);
                //----End of creating one row to display one user by using <tr> and <td> HTML element ---
                //       Proceed to the next user object in the userList Array.
            }//end of for loop.

        }//end of JavaScript anonymous function
            ).fail(function (data, textStatus, jqXHR) {//end of the done() method;
                console.log(textStatus);
                console.log(data);
                console.log(jqXHR);
                new Noty({
                    text: data.responseJSON.message, type: 'error',
                    layout: 'center',
                    template: '<div class="noty_message"><span class="noty_text"></span>'
                }).show();
            });//end of .fail();
    }//end of loadUserData();

    //function getRatesCount(customerAccountId) { //throw away spegatii code
    //    jQuery.ajax({
    //        url: '/Api/AccountRate/GetAccountRateByCustomerAccountId/' + customerAccountId,
    //        method: 'GET',
    //        dataType: 'json',
    //        cache: false,
    //    }).done(function (data, textStatus, jqXHR) {
    //        //This done method will
    //        //The (data) input parameter automatically captures the response from the
    //        //GET() method

    //        //I usually use the following code
    //        //to inspect the returned result captured by the data input parameter
    //        //from the web server.
    //        console.log(data);
    //        accountRateList = data;
    //        //rateCount = accountRateList.length;
    //        //console.log(rateCount);
    //        return accountRateList.length;
    //    }//end of JavaScript anonymous function
    //        ).fail(function (data, textStatus, jqXHR) {//end of the done() method;
    //            console.log(textStatus);
    //            console.log(data);
    //            console.log(jqXHR);
    //            new Noty({
    //                text: data.responseJSON.message, type: 'error',
    //                layout: 'center',
    //                template: '<div class="noty_message"><span class="noty_text"></span>'
    //            }).show();
    //        });//end of .fail();
    //    return null;
    //}

    //https://stackoverflow.com/questions/25275696/javascript-format-date-time#25275808
    function formatDate(date) {
        var hours = date.getHours();
        var minutes = date.getMinutes();
        var ampm = hours >= 12 ? 'pm' : 'am';
        hours = hours % 12;
        hours = hours ? hours : 12; // the hour '0' should be '12'
        minutes = minutes < 10 ? '0' + minutes : minutes;
        var strTime = hours + ':' + minutes + ' ' + ampm;
        return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear() + "  " + strTime;
    }
</script>
