<div class="container">
    <div class="col-md-offset-2 col-md-8">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <div class="panel-title">Create Account Detail</div>
            </div>
            <div class="panel-body">
                <form id="dataForm" role="form" class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="day">Week day name</label>
                        <div class="col-md-4">
                            <select name="day" id="day" required>
                                <option value="1">Sunday</option>
                                <option value="2">Monday</option>
                                <option value="3">Tuesday</option>
                                <option value="4">Wednesday</option>
                                <option value="5">Thursday</option>
                                <option value="6">Friday</option>
                                <option value="7">Saturday</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3"></label>
                        <div class="col-md-4">
                                <input type="button" class="btn btn-default" value="Check current account details" id="cancelButton" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3" for="lessonStartTime">Lesson Start Time</label>
                        <div class="col-md-4">
                            <input type="text" id="lessonStartTime" class="form-control input-group-sm"
                                   maxlength="30" placeholder="" value="" required />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3" for="lessonEndTime">Lesson End Time</label>
                        <div class="col-md-4">
                            <input type="text" id="lessonEndTime" class="form-control input-group-sm"
                                   maxlength="30" placeholder="" value="" required />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3" for="effectiveStartDateInput">Effective Start Date</label>
                        <div class="col-md-4">
                            <input type="text" id="effectiveStartDateInput" class="form-control input-group-sm"
                                   maxlength="30" placeholder="" value="" required />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3" for="effectiveEndDateInput">Effective End Date</label>
                        <div class="col-md-4">
                            <input type="text" id="effectiveEndDateInput" class="form-control input-group-sm"
                                   maxlength="30" placeholder="" value="" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3" for="accountDetailIsVisible">Visibility</label>
                        <div class="col-md-4">
                            <input type="checkbox" id="accountDetailIsVisible" class="input-group-sm" name="isVisible" checked />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3"></label>
                        <div class="col-md-9">
                            <div class="pull-right">
                                <input type="button" class="btn btn-primary" value="Save" id="saveButton" />
                                <input type="button" class="btn btn-default" value="Cancel" id="cancelButton" />
                            </div>
                        </div>
                    </div>

                </form>
            </div><!-- end of div element which has the class="panel-body" -->
        </div><!-- end of the div element which has the class="panel" -->
    </div><!-- end of the div element which has class="col-md-offset-2 col-md-8" -->
</div><!-- end of div element which has the class="container" -->

<script>
    $("[name='isVisible']").bootstrapSwitch();
    $('#effectiveStartDateInput').datepicker({});
    $('#effectiveEndDateInput').datepicker({});
    $('#lessonStartTime').timepicker({ minuteStep: 5 });
    $('#lessonEndTime').timepicker({ minuteStep: 5 });
    $("#dataForm").validate({
        rules: {
            effectiveStartDateInput: {
                required: true,
                date: true
            },
            effectiveEndDateInput: {
                date: true
            },
            lessonStartTime: {
                required: true
            },
            lessonEndTime: {
                required: true
            }
        }
    });
    //Declare a document scope variable, window.sessionSynopsisId.
    //A document scope variable value can be accessed anywhere in the web page during the
    //entire life cycle at the web browser (till the user refresh the page)
    //Naming convention: when you create a variable starting with window.
    //the JavaScript engine knows that this is a global variable because it belongs to the window object.
    //This variable will contain the GUID string user id value
    //which will be extracted from the address bar.
    //The variable will be used in the first Ajax() call, to retrieve JSON structured
    //information about the user
    customerAccountId = getCustomerAccountIdFromAddressBar();

    function getCustomerAccountIdFromAddressBar() {
        //Get customerAccountId from the url string in the browser's address bar
        var urlArray = window.location.href.split('/');
        var customerAccountId = urlArray[urlArray.length - 1];
        return customerAccountId;
    };

    //Note: jQuery.ajax(..) is also often written is $.ajax(..)

    function WebFormData(collectedDay, collectedlessonStartTime, collectedlessonEndTime, collectedEffectiveStartDate, collectedEffectiveEndDate, inCustomerAccountId, inIsVisible) {
        this.day = collectedDay;
        this.lessonStartTime = collectedlessonStartTime;
        this.lessonEndTime = collectedlessonEndTime;
        this.EffectiveStartDate = collectedEffectiveStartDate;
        this.EffectiveEndDate = collectedEffectiveEndDate;
        this.CustomerAccountId = inCustomerAccountId;
        this.IsVisible = inIsVisible;
    }
    function UpdateCustomerAccountData(collectedUpdatedById) {
        this.UpdatedById = collectedUpdatedById
    }
    $('#saveButton').on('click', function () {
        var collectedDay = $('#day').val();
        var collectedlessonStartTime = unformatTime($('#lessonStartTime').val());
        var collectedlessonEndTime = unformatTime($('#lessonEndTime').val());
        var collectedEffectiveStartDate = $('#effectiveStartDateInput').val();
        var collectedEffectiveEndDate = $('#effectiveEndDateInput').val();
        var collectedIsVisible = $('#accountDetailIsVisible').prop('checked'); //https://stackoverflow.com/questions/4813219/testing-if-a-checkbox-is-checked-with-jquery

        if ($("#dataForm").valid() == false) {
            console.log("invaild");
        } else if (collectedEffectiveStartDate.length == 0) { //https://stackoverflow.com/questions/23668065/how-to-do-simple-client-side-form-validation-using-javascript-jquery#23668074
            alert("Please select an effective start date");
        } else if (jQuery.trim(collectedEffectiveStartDate).length == 0) {
            alert("Please select an effective start date");
        //} else if (collectedlessonEndTime < collectedlessonStartTime){ //client side validation not working
        //    alert("Please ensure end time is later than start time"); //need to use server side validation
        } else if (collectedEffectiveEndDate != "") { //client side date validation not effective as server date is more important
            console.log("collectedEffectiveStartDate" + collectedEffectiveStartDate);
            console.log("collectedEffectiveEndDate" + collectedEffectiveEndDate);
            if (collectedEffectiveStartDate > collectedEffectiveEndDate) {
                alert("Please select a end date that is later than the start date");
            } else {
                var webFormData = new WebFormData(collectedDay, collectedlessonStartTime, collectedlessonEndTime, collectedEffectiveStartDate, collectedEffectiveEndDate, customerAccountId, collectedIsVisible)
                Post(webFormData);
            }
        } else {
            var webFormData = new WebFormData(collectedDay, collectedlessonStartTime, collectedlessonEndTime, collectedEffectiveStartDate, collectedEffectiveEndDate, customerAccountId, collectedIsVisible)
            Post(webFormData);
        }//else

        function Post(webFormData) {
            var webFormDataInString = JSON.stringify(webFormData);

            console.log(webFormDataInString);

            $createAccountRateHandler = jQuery.ajax({
                type: 'POST',
                url: '/API/AccountDetail',
                dataType: 'json',
                contentType: 'application/json;',
                data: "'" + webFormDataInString + "'"
            })
            $createAccountRateHandler.done(function (data, textStatus, jqXHR) {
                if (data.status == "success") {
                    new Noty({
                        text: data.message, type: 'success',
                        dismissQueue: true,
                        layout: 'center'
                    }).show();
                     //update customer account

                var collectedUpdatedById = @this.User.Identity.Name;

                var updateCustomerAccountData = new UpdateCustomerAccountData(collectedUpdatedById);
                var updateCustomerAccountDataInString = JSON.stringify(updateCustomerAccountData);
                //console.log(updateCustomerAccountDataInString);
                $updateCustomerAccountHandler = jQuery.ajax({
                    type: 'PUT',
                    url: '/API/CustomerAccount/Update/' + customerAccountId,
                    dataType: 'json',
                    contentType: 'application/json;',
                    data: "'" + updateCustomerAccountDataInString + "'"
                })
                $updateCustomerAccountHandler.done(function (data, textStatus, jqXHR) {
                    if (data.status == "success") {
                        new Noty({
                            text: data.message, type: 'success',
                            dismissQueue: true,
                            layout: 'center'
                        }).show();
                    } else {
                        new Noty({
                            text: data.message, type: 'error',
                            dismissQueue: true,
                            layout: 'center'
                        }).show();
                    }
                });
                $updateCustomerAccountHandler.fail(function (data, textStatus, jqXHR) {
                    console.log('executed when runtime error on server side occurred');
                    new Noty({
                        text: data.responseJSON.message,
                        type: 'error',
                        dismissQueue: true,
                        layout: 'center'
                    }).show();
                });
                } else {
                    new Noty({
                        text: data.message, type: 'error',
                        dismissQueue: true,
                        layout: 'center'
                    }).show();
                }
            });
            $createAccountRateHandler.fail(function (data, textStatus, jqXHR) {
                console.log('executed when runtime error on server side occurred');
                new Noty({
                    text: data.responseJSON.message,
                    type: 'error',
                    dismissQueue: true,
                    layout: 'center'
                }).show();
            });
        }//end of Post Function
    });//end on on click function

    $('#cancelButton').on('click', function () {
        window.location = '/AccountDetail/ManageAccountDetailsForOneCustomerAccount/' + customerAccountId;
    });//end of on click function

    function unformatTime(time) {
        if (time.indexOf("PM") > -1) {
            hour = parseInt(time.substring(0, time.indexOf(":"))) + 12;

        } else {
            hour = parseInt(time.substring(0, time.indexOf(":")));

        }
        minute = time.substring(time.indexOf(":") + 1, time.indexOf(":") + 3)
        //console.log("hour" + hour);
        //console.log("minute" + minute);
        return hour + ":" + minute;
    }
</script>
