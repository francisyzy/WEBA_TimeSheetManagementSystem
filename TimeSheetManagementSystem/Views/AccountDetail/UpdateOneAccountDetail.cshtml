<div class="container">
    <div class="col-md-offset-2 col-md-8">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <div class="panel-title">Update Account Detail</div>
            </div>
            <div class="panel-body">
                <form id="dataForm" role="form" class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="day">Week day name</label>
                        <div class="col-md-4">
                            <select name="day" id="day" required>
                                <option value="1">Sunday</option>
                                <option value="2">Monday</option>
                                <option value="3">Tuesday</option>
                                <option value="4">Wednesday</option>
                                <option value="5">Thursday</option>
                                <option value="6">Friday</option>
                                <option value="7">Saturday</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3" for="lessonStartTime">Lesson Start Time</label>
                        <div class="col-md-4">
                            <input type="text" id="lessonStartTime" class="form-control input-group-sm"
                                   maxlength="30" placeholder="" value="" required />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3" for="lessonEndTime">Lesson End Time</label>
                        <div class="col-md-4">
                            <input type="text" id="lessonEndTime" class="form-control input-group-sm"
                                   maxlength="30" placeholder="" value="" required />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3" for="effectiveStartDateInput">Effective Start Date</label>
                        <div class="col-md-4">
                            <input type="text" id="effectiveStartDateInput" name="effectiveStartDateInput" class="form-control input-group-sm"
                                   maxlength="30" placeholder="" value="" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3" for="effectiveEndDateInput">Effective End Date</label>
                        <div class="col-md-4">
                            <input type="text" id="effectiveEndDateInput" name="effectiveEndDateInput" class="form-control input-group-sm"
                                   maxlength="30" placeholder="" value="" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3" for="accountDetailIsVisible">Visibility</label>
                        <div class="col-md-4">
                            <input type="checkbox" id="accountDetailIsVisible" class="input-group-sm" name="isVisible" checked />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3"></label>
                        <div class="col-md-9">
                            <div class="pull-right">
                                <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#deleteModal">Delete</button>
                                <input type="button" class="btn btn-primary" value="Save" id="saveButton" />
                                <input type="button" class="btn btn-default" value="Cancel" id="cancelButton" />
                            </div>
                        </div>
                    </div>

                </form>
                <!-- Modal -->
                <div id="deleteModal" class="modal fade" role="dialog">
                    <div class="modal-dialog">

                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Delete Account Detail</h4>
                            </div>
                            <div class="modal-body">
                                <p>Deleting account detail can affect consistency in timesheet generated by instructors this month. Continue the delete action?</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-danger" data-dismiss="modal" value="Delete" id="deleteButton">Delete</button>
                            </div>
                        </div>

                    </div>
                </div><!--End of modal-->
            </div><!-- end of div element which has the class="panel-body" -->
        </div><!-- end of the div element which has the class="panel" -->
    </div><!-- end of the div element which has class="col-md-offset-2 col-md-8" -->
</div><!-- end of div element which has the class="container" -->

<script>
    $('#effectiveStartDateInput').datepicker({});
    $('#effectiveEndDateInput').datepicker({});
    $('#lessonStartTime').timepicker({ minuteStep: 5});
    $('#lessonEndTime').timepicker({ minuteStep: 5});
    $("[name='isVisible']").bootstrapSwitch();
    $("#dataForm").validate({
        rules: {
            effectiveStartDateInput: {
                required: true,
                date: true
            },
            effectiveEndDateInput: {
                date: true
            },
            lessonStartTime: {
                required: true
            },
            lessonEndTime: {
                required: true
            }
        }
    });
    //Declare a document scope variable, window.sessionSynopsisId.
    //A document scope variable value can be accessed anywhere in the web page during the
    //entire life cycle at the web browser (till the user refresh the page)
    //Naming convention: when you create a variable starting with window.
    //the JavaScript engine knows that this is a global variable because it belongs to the window object.
    //This variable will contain the GUID string user id value
    //which will be extracted from the address bar.
    //The variable will be used in the first Ajax() call, to retrieve JSON structured
    //information about the user
    accountDetailId = getAccountDetailIdFromAddressBar();

    function getAccountDetailIdFromAddressBar() {
        //Get userid from the url string in the browser's address bar
        var urlArray = window.location.href.split('/');
        var accountDetailId = urlArray[urlArray.length - 1];
        return accountDetailId;
    };

    //Note: jQuery.ajax(..) is also often written is $.ajax(..)

    getAccountDetailDetails();

    function getAccountDetailDetails() {
        //console.log('/API/AccountDetail/GetAccountDetailByAccountDetailId' + accountDetailId);
        $loadHandler = jQuery.ajax({
            type: 'GET',
            url: '/API/AccountDetail/GetAccountDetailByAccountDetailId/' + accountDetailId,
        })
        $loadHandler.done(function (data, textStatus, jqXHR) {
            //The (data) input parameter automatically captures the response from the
            //Get API method
            //I usually use the following code
            //to inspect the returned result captured by the data input parameter
            //from the web server.
            console.log(data);

            //After inspecting the data object with the console.log
            //I have clear picture of the structure and used
            //the following variable to reference(represent) the data variable.
            var accountDetail = data;
            //Copy out the user information

            customerAccountId = accountDetail.customerAccountId;
            //console.log("customer account id: "+customerAccountId);

            effectiveStartDate = formatDate(new Date(Date.parse(accountDetail.effectiveStartDate)));
            effectiveEndDate = formatDate(new Date(Date.parse(accountDetail.effectiveEndDate)));
            //https://stackoverflow.com/questions/17950075/convert-c-sharp-datetime-to-javascript-date

            //Populate the respective input controls with the account details.
            //For example, find the text input control, fullNameInput and set the text input control
            //'s value with the fullName variable's content.
            $('#day').val(accountDetail.day);
            $('#lessonStartTime').timepicker('setTime', formatTime(accountDetail.startTimeInMinutes));
            //$('#lessonEndTime').val(endTime);
            $('#lessonEndTime').timepicker('setTime', formatTime(accountDetail.endTimeInMinutes));
            $('#effectiveStartDateInput').val(effectiveStartDate);
            $('#effectiveEndDateInput').val(effectiveEndDate);
            $('#accountDetailIsVisible').prop("checked", accountDetail.isVisible); //https://stackoverflow.com/questions/8206565/check-uncheck-checkbox-with-javascript#8206573

            //$('#sessionSypnosisIsVisible').val(visible); //this method doenst work
        }//end of JavaScript anonymous function

        )//end of the done() method;
    }//end of getUserDetails();
    function WebFormData(collectedDay, collectedlessonStartTime, collectedlessonEndTime, collectedEffectiveStartDate, collectedEffectiveEndDate, inIsVisible) {
        this.day = collectedDay;
        this.lessonStartTime = collectedlessonStartTime;
        this.lessonEndTime = collectedlessonEndTime;
        this.EffectiveStartDate = collectedEffectiveStartDate;
        this.EffectiveEndDate = collectedEffectiveEndDate;
        this.IsVisible = inIsVisible;
    }
    function UpdateCustomerAccountData(collectedUpdatedById) {
        this.UpdatedById = collectedUpdatedById
    }

    $('#saveButton').on('click', function () {
        var collectedDay = $('#day').val();
        var collectedlessonStartTime = unformatTime($('#lessonStartTime').val());
        var collectedlessonEndTime = unformatTime($('#lessonEndTime').val());
        var collectedEffectiveStartDate = $('#effectiveStartDateInput').val();
        var collectedEffectiveEndDate = $('#effectiveEndDateInput').val();
        var collectedIsVisible = $('#accountDetailIsVisible').prop('checked'); //https://stackoverflow.com/questions/4813219/testing-if-a-checkbox-is-checked-with-jquery

        if ($("#dataForm").valid() == false) {
            console.log("invaild");
        } else if (collectedEffectiveStartDate.length == 0) { //https://stackoverflow.com/questions/23668065/how-to-do-simple-client-side-form-validation-using-javascript-jquery#23668074
            alert("Please select an effective start date");
        //} else if (collectedlessonEndTime < collectedlessonStartTime) { //client side validation not working
        //    console.log("collectedlessonEndTime" + collectedlessonEndTime); //need to use server side validation
        //    console.log("collectedlessonStartTime" + collectedlessonStartTime);
        //    alert("Please ensure end time is later than start time");
        }  else if (jQuery.trim(collectedEffectiveStartDate).length == 0) {
            alert("Please select an effective start date");
        } else if (collectedEffectiveEndDate != "") { //client side date validation not effective as server date is more important
            //console.log("collectedEffectiveStartDate" + collectedEffectiveStartDate);
            //console.log("collectedEffectiveEndDate" + collectedEffectiveEndDate);
            if (collectedEffectiveStartDate > collectedEffectiveEndDate) {
                alert("Please select a end date that is later than the start date");
            } else {
                var webFormData = new WebFormData(collectedDay, collectedlessonStartTime, collectedlessonEndTime, collectedEffectiveStartDate, collectedEffectiveEndDate, collectedIsVisible);
                Put(webFormData);
            }
        } else {
            var webFormData = new WebFormData(collectedDay, collectedlessonStartTime, collectedlessonEndTime, collectedEffectiveStartDate, collectedEffectiveEndDate, collectedIsVisible);
            Put(webFormData);
        }//end of else
        function Put(webFormData) {
            var webFormDataInString = JSON.stringify(webFormData);

            $updateAccountDetailHandler = jQuery.ajax({
                type: 'PUT',
                url: '/API/AccountDetail/' + accountDetailId,
                dataType: 'json',
                contentType: 'application/json;',
                data: "'" + webFormDataInString + "'"
            })
            $updateAccountDetailHandler.done(function (data, textStatus, jqXHR) {
                if (data.status == "success") {
                    new Noty({
                        text: data.message, type: 'success',
                        dismissQueue: true,
                        layout: 'center'
                    }).show();
                    //update udpated by id
                    var collectedUpdatedById = @this.User.Identity.Name;

                    var updateCustomerAccountData = new UpdateCustomerAccountData(collectedUpdatedById);
                    var updateCustomerAccountDataInString = JSON.stringify(updateCustomerAccountData);
                    console.log(updateCustomerAccountDataInString);
                    $updateCustomerAccountHandler = jQuery.ajax({
                        type: 'PUT',
                        url: '/API/CustomerAccount/Update/' + customerAccountId,
                        dataType: 'json',
                        contentType: 'application/json;',
                        data: "'" + updateCustomerAccountDataInString + "'"
                    })
                    $updateCustomerAccountHandler.done(function (data, textStatus, jqXHR) {
                        if (data.status == "success") {
                            new Noty({
                                text: data.message, type: 'success',
                                dismissQueue: true,
                                layout: 'center'
                            }).show();
                        } else {
                            new Noty({
                                text: data.message, type: 'error',
                                dismissQueue: true,
                                layout: 'center'
                            }).show();
                        }
                    });
                    $updateCustomerAccountHandler.fail(function (data, textStatus, jqXHR) {
                        console.log('executed when runtime error on server side occurred');
                        new Noty({
                            text: data.responseJSON.message,
                            type: 'error',
                            dismissQueue: true,
                            layout: 'center'
                        }).show();
                    });
                } else {
                    new Noty({
                        text: data.message, type: 'error',
                        dismissQueue: true,
                        layout: 'center'
                    }).show();
                }
            });
            $updateAccountDetailHandler.fail(function (data, textStatus, jqXHR) {
                console.log('executed when runtime error on server side occurred');
                new Noty({
                    text: data.responseJSON.message,
                    type: 'error',
                    dismissQueue: true,
                    layout: 'center'
                }).show();
            });

        }//end of function
    });//end on on click function

    $('#deleteButton').on('click', function () {
        $deleteAccountDetailHandler = jQuery.ajax({
            type: 'Delete',
            url: '/API/AccountDetail/' + accountDetailId,
        })
        $deleteAccountDetailHandler.done(function (data, textStatus, jqXHR) {
            if (data.status == "success") {
                new Noty({
                    text: data.message, type: 'success',
                    dismissQueue: true,
                    layout: 'center'
                }).show();
            } else {
                new Noty({
                    text: data.message, type: 'error',
                    template: '<div class="noty_message"><span class="noty_text"></span>',
                    layout: 'center'
                }).show();
            }
        });
        $deleteAccountDetailHandler.fail(function (data, textStatus, jqXHR) {
            console.log('executed when runtime error on server side occurred');
            console.log(data.responseJSON.message);
            console.log(data);
            new Noty({
                text: data.responseJSON.message,
                type: 'error',
                template: '<div class="noty_message"><span class="noty_text"></span>',
                layout: 'center'
            }).show();
        });
    });//end of on click function

    $('#cancelButton').on('click', function () {
        window.location = '/AccountDetail/ManageAccountDetailsForOneCustomerAccount/' + customerAccountId;
    });//end of on click function

    //https://stackoverflow.com/questions/25275696/javascript-format-date-time#25275808
    function formatDate(date) {
        if (isNaN(date.getTime())) { //https://stackoverflow.com/questions/1353684/detecting-an-invalid-date-date-instance-in-javascript#1353711
            return "NA";
        } else { //https://stackoverflow.com/questions/12346381/set-date-in-input-type-date#12347050
            var day = ("0" + date.getDate()).slice(-2);
            var month = ("0" + (date.getMonth() + 1)).slice(-2);

            return date.getFullYear() + "-" + (month) + "-" + (day);
        }

    }

    function formatTime(time) {
        if (parseInt(time / 60) > 12) {
            hour = parseInt(time / 60) - 12;
            AMorPM = " PM";
        } else {
            hour = parseInt(time / 60);
            AMorPM = " AM";
        }
        if ((time % 60) == 0) {
            minute = "00";
        } else if ((time % 60) < 10) {
            minute = "0" + time % 60
        } else {
            minute = (time % 60);
        }
        return hour + ":" + minute + AMorPM;
    }

    function unformatTime(time) {
        if (time.indexOf("PM") > -1) {
            hour = parseInt(time.substring(0, time.indexOf(":"))) + 12;

        } else {
            hour = parseInt(time.substring(0, time.indexOf(":")));

        }
        minute = time.substring(time.indexOf(":") + 1, time.indexOf(":") + 3)
        //console.log("hour" + hour);
        //console.log("minute" + minute);
        return hour + ":" + minute;
    }
</script>
